#include <ESP32Servo.h>

Servo myservo;
char user_input;

void setup() {
  Serial.begin(9600);
  myservo.attach(22);
  Serial.println("Enter angle: 0, 90, 180, 30 or 120");
}

void loop() {
  if (Serial.available() > 0) {
    user_input = Serial.read();

    if (user_input == '0') {
      Serial.println("Servo Motor => 0");
      myservo.write(0);
    } 
    else if (user_input == '1') { 
      Serial.println("Servo Motor => 90");
      myservo.write(90);
    } 
    else if (user_input == '2') { 
      Serial.println("Servo Motor => 180");
      myservo.write(180);
    }else if (user_input == '3') { 
      Serial.println("Servo Motor => 30");
      myservo.write(30);
    }else if (user_input == '4') { 
      Serial.println("Servo Motor => 120");
      myservo.write(120);
    }
    delay(1000);
  }
}


//01
import sys
import serial

from  PyQt5.QtWidgets import QApplication,QWidget,QPushButton,QVBoxLayout,QMessageBox

try :
  arduino = serial.Serial('COM3', 9600, timeout=1) #‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô COM3 ‡πÄ‡∏õ‡πá‡∏ô‡∏û‡∏≠‡∏£‡πå‡∏ï‡∏ó‡∏µ‡πà Arduino ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠
except Exception as e:
  arduino = None
  print("‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏ï‡πà‡∏≠‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ: ",e)

class AruinoControl(QWidget):
    def __init__(self):
      super().__init__()
      self.setWindowTitle("Aruino Controller") #‡∏ä‡∏∑‡πà‡∏≠‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î
      self.setGeometry(600,600,400,100) #‡∏Ç‡∏ô‡∏≤‡∏î

      layout = QVBoxLayout()
      self.btn_15 = QPushButton("Sovereignty 15")
      self.btn_15.clicked.connect(lambda:self.send_command("15"))
      layout.addWidget(self.btn_15)

      self.btn_30 = QPushButton("Sovereignty 30")
      self.btn_30.clicked.connect(lambda:self.send_command("30"))
      layout.addWidget(self.btn_30)

      self.btn_60 = QPushButton("Sovereignty 60")
      self.btn_60.clicked.connect(lambda:self.send_command("60"))
      layout.addWidget(self.btn_60)

      self.btn_90 = QPushButton("Sovereignty 90")
      self.btn_90.clicked.connect(lambda:self.send_command("90"))
      layout.addWidget(self.btn_90)

      self.btn_115 = QPushButton("Sovereignty 115")
      self.btn_115.clicked.connect(lambda:self.send_command("115"))
      layout.addWidget(self.btn_115)

      self.btn_135 = QPushButton("Sovereignty 135")
      self.btn_135.clicked.connect(lambda:self.send_command("135"))
      layout.addWidget(self.btn_135)

      self.btn_160 = QPushButton("Sovereignty 160")
      self.btn_160.clicked.connect(lambda:self.send_command("160"))
      layout.addWidget(self.btn_160)

      self.btn_Stop = QPushButton("Sovereignty Stop")
      self.btn_Stop.clicked.connect(lambda:self.send_command("Stop"))
      layout.addWidget(self.btn_Stop)

      self.setLayout(layout)

    def send_command(self, command):
      if(arduino):
        arduino.write((command+'\n').encode())
      else:
        QMessageBox.critical(self, "Error","‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Arduino")
if __name__ == "__main__":
  app = QApplication(sys.argv)
  window = AruinoControl()
  window.show()
  sys.exit(app.exec_())


//arduino
#include <ESP32Servo.h>
Servo myservo;
String command;          // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
unsigned long previousMillis = 0; //‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏û‡∏∂‡πà‡∏á‡∏Å‡∏£‡∏∞‡∏û‡∏¥‡∏ö‡πÑ‡∏ü 
const long interval = 400; // 0.4 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ ‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏≠‡∏≤‡πÑ‡∏ß‡πâ‡∏Å‡∏£‡∏∞‡∏û‡∏¥‡∏ö
bool ledState = LOW;       // ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÑ‡∏ü

void setup() {
  Serial.begin(9600);
  myservo.attach(22);
  pinMode(2, OUTPUT);
}

void loop() {
  // ‡∏≠‡πà‡∏≤‡∏ô Serial
  if (Serial.available()) {
    command = Serial.readStringUntil('\n');
    command.trim();

    // ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏õ‡∏£‡∏±‡∏ö‡∏°‡∏∏‡∏°
    if (command == "15" || command == "30" || command == "45" || 
        command == "60" || command == "90") {
      myservo.write(command.toInt());

    } else if (command == "115" || command == "135" || command == "160") {
      myservo.write(command.toInt());
      digitalWrite(2, HIGH);   // ‡πÑ‡∏ü‡∏ï‡∏¥‡∏î‡∏Ñ‡πâ‡∏≤‡∏á

    } else if (command == "Stop") {
      myservo.write(0);
      digitalWrite(2, LOW);    // ‡πÑ‡∏ü‡∏î‡∏±‡∏ö
    }
  }

  // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÑ‡∏ü‡∏Å‡∏£‡∏∞‡∏û‡∏£‡∏¥‡∏ö (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á 15‚Äì90)
  if (command == "15" || command == "30" || command == "45" || 
      command == "60" || command == "90") {
    unsigned long currentMillis = millis();
    if (currentMillis - previousMillis >= interval) {
      previousMillis = currentMillis;
      ledState = !ledState;              // ‡∏™‡∏•‡∏±‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
      digitalWrite(2, ledState);
    }
  }
}
‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡πÇ‡∏Ñ‡πâ‡∏î


### 1. ‡∏™‡πà‡∏ß‡∏ô‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£
#include <ESP32Servo.h>
Servo myservo;
String command;                 // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏à‡∏≤‡∏Å Serial
unsigned long previousMillis = 0; // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡πà‡∏≤‡πÄ‡∏ß‡∏•‡∏≤‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÄ‡∏ä‡πá‡∏Ñ‡πÑ‡∏ü‡∏Å‡∏£‡∏∞‡∏û‡∏£‡∏¥‡∏ö
const long interval = 400;        // 0.4 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ ‡πÉ‡∏ä‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏≠‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏û‡∏£‡∏¥‡∏ö
bool ledState = LOW;              // ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÑ‡∏ü‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô (‡∏î‡∏±‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô)

```
ESP32Servo.h` : ‡πÑ‡∏•‡∏ö‡∏£‡∏≤‡∏£‡∏µ‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡πÄ‡∏ã‡∏≠‡∏£‡πå‡πÇ‡∏ß‡∏°‡∏≠‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏ö‡∏ô ESP32
Servo myservo;` : ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏≠‡∏ö‡πÄ‡∏à‡πá‡∏Å‡∏ï‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå‡πÇ‡∏ß‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°
command : ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏≠‡πà‡∏≤‡∏ô‡∏°‡∏≤‡∏à‡∏≤‡∏Å Serial (‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ)
previousMillis` & `interval` : ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡πÉ‡∏´‡πâ LED ‡∏Å‡∏£‡∏∞‡∏û‡∏£‡∏¥‡∏ö‡πÅ‡∏ö‡∏ö **non-blocking** (‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ `delay()`)
ledState : ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ ON/OFF ‡∏Ç‡∏≠‡∏á LED

---

### 2. setup()

void setup() {
  Serial.begin(9600);    // ‡πÄ‡∏õ‡∏¥‡∏î Serial monitor ‡∏ó‡∏µ‡πà baud rate 9600
  myservo.attach(22);    // ‡∏ï‡πà‡∏≠‡πÄ‡∏ã‡∏≠‡∏£‡πå‡πÇ‡∏ß‡πÄ‡∏Ç‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏Ç‡∏≤ 22
  pinMode(2, OUTPUT);    // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ç‡∏≤ 2 ‡πÄ‡∏õ‡πá‡∏ô OUTPUT ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏° LED
}
```

* ‡πÄ‡∏£‡∏¥‡πà‡∏° Serial monitor
* ‡πÄ‡∏ã‡∏≠‡∏£‡πå‡πÇ‡∏ß‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ó‡∏µ‡πà‡∏Ç‡∏≤ GPIO22
* LED ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ó‡∏µ‡πà‡∏Ç‡∏≤ GPIO2

---

### 3. loop() - ‡∏™‡πà‡∏ß‡∏ô‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏à‡∏≤‡∏Å Serial

if (Serial.available()) {
  command = Serial.readStringUntil('\n'); // ‡∏≠‡πà‡∏≤‡∏ô‡∏à‡∏ô‡πÄ‡∏à‡∏≠ newline
  command.trim(); // ‡∏ï‡∏±‡∏î‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á‡∏´‡∏£‡∏∑‡∏≠ \r \n ‡∏≠‡∏≠‡∏Å
```

* ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤‡∏ó‡∏≤‡∏á Serial ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
* ‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏õ‡πá‡∏ô `String` ‡∏à‡∏ô‡πÄ‡∏à‡∏≠ **Enter (newline)**
* ‡∏•‡∏ö‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô‡πÄ‡∏Å‡∏¥‡∏ô

---

#### 3.1 ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏õ‡∏£‡∏±‡∏ö‡∏°‡∏∏‡∏° 15‚Äì90 ‡∏≠‡∏á‡∏®‡∏≤

```cpp
if (command == "15" || command == "30" || command == "45" || 
    command == "60" || command == "90") {
  myservo.write(command.toInt());
}
```
* ‡∏ñ‡πâ‡∏≤‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç 15, 30, 45, 60, 90 ‚Üí ‡∏´‡∏°‡∏∏‡∏ô‡πÄ‡∏ã‡∏≠‡∏£‡πå‡πÇ‡∏ß‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏°‡∏∏‡∏°‡∏ô‡∏±‡πâ‡∏ô
* LED ‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏ï‡∏¥‡∏î‡∏Ñ‡πâ‡∏≤‡∏á ‡πÅ‡∏ï‡πà‡πÑ‡∏õ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÉ‡∏ô‡πÇ‡∏´‡∏°‡∏î "‡∏Å‡∏£‡∏∞‡∏û‡∏£‡∏¥‡∏ö" (‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á)

---

#### 3.2 ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏õ‡∏£‡∏±‡∏ö‡∏°‡∏∏‡∏° 115‚Äì160 ‡∏≠‡∏á‡∏®‡∏≤

```cpp
else if (command == "115" || command == "135" || command == "160") {
  myservo.write(command.toInt());
  digitalWrite(2, HIGH);   // ‡πÑ‡∏ü LED ‡∏ï‡∏¥‡∏î‡∏Ñ‡πâ‡∏≤‡∏á
}
```

* ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô 115, 135 ‡∏´‡∏£‡∏∑‡∏≠ 160 ‚Üí ‡∏´‡∏°‡∏∏‡∏ô‡πÄ‡∏ã‡∏≠‡∏£‡πå‡πÇ‡∏ß ‡πÅ‡∏•‡∏∞‡∏ó‡∏≥‡πÉ‡∏´‡πâ LED **‡∏ï‡∏¥‡∏î‡∏Ñ‡πâ‡∏≤‡∏á (‡πÑ‡∏°‡πà‡∏Å‡∏£‡∏∞‡∏û‡∏£‡∏¥‡∏ö)**

---

#### 3.3 ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á Stop

```cpp
else if (command == "Stop") {
  myservo.write(0);
  digitalWrite(2, LOW);    // ‡πÑ‡∏ü‡∏î‡∏±‡∏ö
}
```

* ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á `"Stop"` ‚Üí ‡πÄ‡∏ã‡∏≠‡∏£‡πå‡πÇ‡∏ß‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏°‡∏∏‡∏° 0¬∞ ‡πÅ‡∏•‡∏∞ LED ‡∏î‡∏±‡∏ö

---

### 4. ‡∏™‡πà‡∏ß‡∏ô‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡πÑ‡∏ü‡∏Å‡∏£‡∏∞‡∏û‡∏£‡∏¥‡∏ö (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏°‡∏∏‡∏° 15‚Äì90)

```cpp
if (command == "15" || command == "30" || command == "45" || 
    command == "60" || command == "90") {
  unsigned long currentMillis = millis();
  if (currentMillis - previousMillis >= interval) {
    previousMillis = currentMillis;
    ledState = !ledState;              // ‡∏™‡∏•‡∏±‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ ON <-> OFF
    digitalWrite(2, ledState);
  }
}
```

* ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏Ñ‡∏∑‡∏≠ 15‚Äì90 ‚Üí ‡∏à‡∏∞‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡πÇ‡∏´‡∏°‡∏î‡∏Å‡∏£‡∏∞‡∏û‡∏£‡∏¥‡∏ö‡πÑ‡∏ü
* ‡πÉ‡∏ä‡πâ `millis()` ‡πÅ‡∏ó‡∏ô `delay()` ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏´‡∏¢‡∏∏‡∏î‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
* ‡∏ó‡∏∏‡∏Å‡πÜ 400ms ‚Üí ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ LED
* ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå: **‡πÑ‡∏ü‡∏Å‡∏£‡∏∞‡∏û‡∏£‡∏¥‡∏ö‡∏Ç‡∏ì‡∏∞‡∏ó‡∏µ‡πà‡πÄ‡∏ã‡∏≠‡∏£‡πå‡πÇ‡∏ß‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà‡∏°‡∏∏‡∏° 15‚Äì90**

---

## ‚úÖ ‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÇ‡∏î‡∏¢‡∏£‡∏ß‡∏°

1. ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ú‡πà‡∏≤‡∏ô **Serial Monitor**
2. ESP32 ‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡πà‡∏≤‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏≥‡∏á‡∏≤‡∏ô:

   * `"15‚Äì90"` ‚Üí ‡πÄ‡∏ã‡∏≠‡∏£‡πå‡πÇ‡∏ß‡∏´‡∏°‡∏∏‡∏ô ‡πÅ‡∏•‡∏∞ LED ‡∏Å‡∏£‡∏∞‡∏û‡∏£‡∏¥‡∏ö
   * `"115‚Äì160"` ‚Üí ‡πÄ‡∏ã‡∏≠‡∏£‡πå‡πÇ‡∏ß‡∏´‡∏°‡∏∏‡∏ô ‡πÅ‡∏•‡∏∞ LED ‡∏ï‡∏¥‡∏î‡∏Ñ‡πâ‡∏≤‡∏á
   * `"Stop"` ‚Üí ‡πÄ‡∏ã‡∏≠‡∏£‡πå‡πÇ‡∏ß‡∏Å‡∏•‡∏±‡∏ö 0¬∞ ‡πÅ‡∏•‡∏∞ LED ‡∏î‡∏±‡∏ö

---

## üî¶ ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô

* ‡∏û‡∏¥‡∏°‡∏û‡πå `45` ‚Üí ‡πÄ‡∏ã‡∏≠‡∏£‡πå‡πÇ‡∏ß‡∏´‡∏°‡∏∏‡∏ô‡πÑ‡∏õ‡∏ó‡∏µ‡πà 45¬∞ ‡πÅ‡∏•‡∏∞ LED ‡∏ö‡∏ô GPIO2 ‡∏Å‡∏£‡∏∞‡∏û‡∏£‡∏¥‡∏ö
* ‡∏û‡∏¥‡∏°‡∏û‡πå `135` ‚Üí ‡πÄ‡∏ã‡∏≠‡∏£‡πå‡πÇ‡∏ß‡∏´‡∏°‡∏∏‡∏ô‡πÑ‡∏õ‡∏ó‡∏µ‡πà 135¬∞ ‡πÅ‡∏•‡∏∞ LED ‡∏ï‡∏¥‡∏î‡∏Ñ‡πâ‡∏≤‡∏á
* ‡∏û‡∏¥‡∏°‡∏û‡πå `Stop` ‚Üí ‡πÄ‡∏ã‡∏≠‡∏£‡πå‡πÇ‡∏ß‡∏´‡∏°‡∏∏‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ 0¬∞ ‡πÅ‡∏•‡∏∞ LED ‡∏î‡∏±‡∏ö






//23
import sys
import serial

from PyQt5.QtWidgets import QApplication, QWidget,QPushButton,QVBoxLayout,QMessageBox, QLabel
from PyQt5.QtGui import QFont, QColor, QPalette
from PyQt5.QtCore import Qt, QTimer


#‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ö‡∏≠‡∏£‡πå‡∏î‡πÅ‡∏•‡∏∞‡∏û‡∏≠‡∏£‡πå‡∏ï‡∏Ñ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏û‡∏≠‡∏£‡πå‡∏ï‡∏≠‡∏∞‡πÑ‡∏£‡πÅ‡∏Å‡πâ‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å
try :
  arduino = serial.Serial('COM3',9600,timeout=1)
except Exception as e:
  arduino = None
  print("‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏°‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ :",e)

#‡∏™‡∏£‡πâ‡∏≤‡∏áGUI
class GUI(QWidget):
    def __init__(self):
      super().__init__()
      self.setWindowTitle("Arduino Control") #‡∏ä‡∏∑‡πà‡∏≠‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°
      self.setGeometry(800,800,500,300) #‡∏Ç‡∏ô‡∏≤‡∏î

      layout = QVBoxLayout()
      #--Button ‡πÄ‡∏õ‡∏¥‡∏î -----

      self.btn_on = QPushButton("15") #‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏™‡∏î‡∏á‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏Ñ‡πà‡∏≤15
      self.btn_on.clicked.connect(lambda:self.send_command("15")) #‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏ö‡∏≠‡∏£‡πå‡∏î‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á‡∏Ñ‡πà‡∏≤15‡πÑ‡∏õ
      layout.addWidget(self.btn_on) #‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤ layout
      

      self.btn_on = QPushButton("30") #‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏™‡∏î‡∏á‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏Ñ‡πà‡∏≤30
      self.btn_on.clicked.connect(lambda:self.send_command("30"))#‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏ö‡∏≠‡∏£‡πå‡∏î‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á‡∏Ñ‡πà‡∏≤30‡πÑ‡∏õ
      layout.addWidget(self.btn_on) #‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤ layout
     

      self.btn_on = QPushButton("45")#‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏™‡∏î‡∏á‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏Ñ‡πà‡∏≤45
      self.btn_on.clicked.connect(lambda:self.send_command("45"))#‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏ö‡∏≠‡∏£‡πå‡∏î‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á‡∏Ñ‡πà‡∏≤45‡πÑ‡∏õ
      layout.addWidget(self.btn_on) #‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤ layout
      

      self.btn_on = QPushButton("90")#‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏™‡∏î‡∏á‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏Ñ‡πà‡∏≤90
      self.btn_on.clicked.connect(lambda:self.send_command("90"))#‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏ö‡∏≠‡∏£‡πå‡∏î‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á‡∏Ñ‡πà‡∏≤90‡πÑ‡∏õ
      layout.addWidget(self.btn_on) #‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤ layout
      
      self.btn_on = QPushButton("125")#‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏™‡∏î‡∏á‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏Ñ‡πà‡∏≤125
      self.btn_on.clicked.connect(lambda:self.send_command("125"))#‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏ö‡∏≠‡∏£‡πå‡∏î‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á‡∏Ñ‡πà‡∏≤125‡πÑ‡∏õ
      layout.addWidget(self.btn_on) #‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤ layout
     

      self.btn_on = QPushButton("135")#‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏™‡∏î‡∏á‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏Ñ‡πà‡∏≤135
      self.btn_on.clicked.connect(lambda:self.send_command("135"))#‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏ö‡∏≠‡∏£‡πå‡∏î‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á‡∏Ñ‡πà‡∏≤135‡πÑ‡∏õ
      layout.addWidget(self.btn_on) #‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤ layout
      

      self.btn_on = QPushButton("150")#‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏™‡∏î‡∏á‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏Ñ‡πà‡∏≤150
      self.btn_on.clicked.connect(lambda:self.send_command("150"))#‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏ö‡∏≠‡∏£‡πå‡∏î‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á‡∏Ñ‡πà‡∏≤150‡πÑ‡∏õ
      layout.addWidget(self.btn_on) #‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤ layout
      



      #--Button ‡∏õ‡∏¥‡∏î -----
      self.btn_off = QPushButton("STOP")#‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏™‡∏î‡∏á‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏Ñ‡πà‡∏≤‡∏´‡∏¢‡∏∏‡∏î
      self.btn_off.clicked.connect(lambda:self.send_command("OFF"))#‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏ö‡∏≠‡∏£‡πå‡∏î‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á Arduino ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏´‡∏¢‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô (‡πÄ‡∏ä‡πà‡∏ô‡∏´‡∏¢‡∏∏‡∏î‡∏´‡∏°‡∏∏‡∏ô‡∏°‡∏≠‡πÄ‡∏ï‡∏≠‡∏£‡πå)
      layout.addWidget(self.btn_off) #‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤ layout


      self.setLayout(layout) #‡∏Å‡∏≥‡∏´‡∏ô‡∏î layout ‡∏´‡∏•‡∏±‡∏Å‡πÉ‡∏´‡πâ‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á


    #‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á Arduino
    def send_command(self,command):
      if(arduino):
        arduino.write((command + '\n').encode())#‡πÅ‡∏õ‡∏•‡∏á string ‡πÄ‡∏õ‡πá‡∏ô byte ‡πÅ‡∏•‡πâ‡∏ß‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏ó‡∏≤‡∏á serial
      else:
        QMessageBox.critical(self,"Error","‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Arduino")


#‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á GUI OUTPUT
#‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á GUI
if __name__ == "__main__":
    app = QApplication(sys.argv)
    window = GUI()
    window.show()
    sys.exit(app.exec_())



//arduino
#include <ESP32Servo.h>        // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡πÑ‡∏•‡∏ö‡∏£‡∏≤‡∏£‡∏µ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏° Servo ‡∏ö‡∏ô ESP32

Servo myservo;                 // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡πá‡∏≠‡∏ö‡πÄ‡∏à‡∏Å‡∏ï‡πå servo ‡∏ä‡∏∑‡πà‡∏≠ myservo
String command;                // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ String ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡∏°‡∏≤‡∏à‡∏≤‡∏Å Serial

void setup() {
  Serial.begin(9600);          // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏£ Serial ‡∏ó‡∏µ‡πà baudrate 9600
  myservo.attach(22);          // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ç‡∏≤‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏° Servo ‡πÉ‡∏ä‡πâ‡∏Ç‡∏≤ GPIO 22
  pinMode(2, OUTPUT);          // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ç‡∏≤ GPIO 2 ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏≠‡∏≤‡∏ï‡πå‡∏û‡∏∏‡∏ï (‡πÉ‡∏ä‡πâ‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö LED)
}

void loop() {
  if (Serial.available()) {                        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤‡∏ó‡∏≤‡∏á Serial ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    String command = Serial.readStringUntil('\n'); // ‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Serial ‡∏à‡∏ô‡∏Å‡∏ß‡πà‡∏≤‡∏à‡∏∞‡πÄ‡∏à‡∏≠ '\n' (‡∏Ç‡∏∂‡πâ‡∏ô‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡πÉ‡∏´‡∏°‡πà)
    command.trim();                                // ‡∏ï‡∏±‡∏î‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á (space/enter) ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏ô‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ

    if (command == "15") {                         // ‡∏ñ‡πâ‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡∏°‡∏≤‡πÄ‡∏õ‡πá‡∏ô "15"
      Serial.println("Servo Motor => 15");         // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô Serial Monitor
      myservo.write(15);                           // ‡∏´‡∏°‡∏∏‡∏ô Servo ‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏°‡∏∏‡∏° 15 ‡∏≠‡∏á‡∏®‡∏≤
      blinkLED();                                  // ‡∏Å‡∏£‡∏∞‡∏û‡∏£‡∏¥‡∏ö LED ‡πÅ‡∏ö‡∏ö‡πÄ‡∏£‡πá‡∏ß
    } 
    else if (command == "30") {                    // ‡∏ñ‡πâ‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡∏°‡∏≤‡πÄ‡∏õ‡πá‡∏ô "30"
      Serial.println("Servo Motor => 30");
      myservo.write(30);                           // ‡∏´‡∏°‡∏∏‡∏ô Servo ‡πÑ‡∏õ‡∏ó‡∏µ‡πà 30 ‡∏≠‡∏á‡∏®‡∏≤
      blinkLED();                                  // ‡∏Å‡∏£‡∏∞‡∏û‡∏£‡∏¥‡∏ö LED ‡πÅ‡∏ö‡∏ö‡πÄ‡∏£‡πá‡∏ß
    } 
    else if (command == "45") {                    // ‡∏ñ‡πâ‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡∏°‡∏≤‡πÄ‡∏õ‡πá‡∏ô "45"
      Serial.println("Servo Motor => 45");
      myservo.write(45);                           // ‡∏´‡∏°‡∏∏‡∏ô Servo ‡πÑ‡∏õ‡∏ó‡∏µ‡πà 45 ‡∏≠‡∏á‡∏®‡∏≤
      blinkLED();                                  // ‡∏Å‡∏£‡∏∞‡∏û‡∏£‡∏¥‡∏ö LED ‡πÅ‡∏ö‡∏ö‡πÄ‡∏£‡πá‡∏ß
    } 
    else if (command == "90") {                    // ‡∏ñ‡πâ‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡∏°‡∏≤‡πÄ‡∏õ‡πá‡∏ô "90"
      Serial.println("Servo Motor => 90");
      myservo.write(90);                           // ‡∏´‡∏°‡∏∏‡∏ô Servo ‡πÑ‡∏õ‡∏ó‡∏µ‡πà 90 ‡∏≠‡∏á‡∏®‡∏≤
      digitalWrite(2, HIGH);                       // ‡πÄ‡∏õ‡∏¥‡∏î LED ‡∏Ñ‡πâ‡∏≤‡∏á‡πÑ‡∏ß‡πâ (‡πÑ‡∏°‡πà‡∏Å‡∏£‡∏∞‡∏û‡∏£‡∏¥‡∏ö)
    }
    else if (command == "125") {                   // ‡∏ñ‡πâ‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡∏°‡∏≤‡πÄ‡∏õ‡πá‡∏ô "125"
      Serial.println("Servo Motor => 125");
      myservo.write(125);                          // ‡∏´‡∏°‡∏∏‡∏ô Servo ‡πÑ‡∏õ‡∏ó‡∏µ‡πà 125 ‡∏≠‡∏á‡∏®‡∏≤
      secLED();                                    // ‡∏Å‡∏£‡∏∞‡∏û‡∏£‡∏¥‡∏ö LED ‡∏ä‡πâ‡∏≤ (‡∏ó‡∏∏‡∏Å 2 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ)
    }
    else if (command == "135") {                   // ‡∏ñ‡πâ‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡∏°‡∏≤‡πÄ‡∏õ‡πá‡∏ô "135"
      Serial.println("Servo Motor => 135");
      myservo.write(135);                          // ‡∏´‡∏°‡∏∏‡∏ô Servo ‡πÑ‡∏õ‡∏ó‡∏µ‡πà 135 ‡∏≠‡∏á‡∏®‡∏≤
      secLED();                                    // ‡∏Å‡∏£‡∏∞‡∏û‡∏£‡∏¥‡∏ö LED ‡∏ä‡πâ‡∏≤
    }
    else if (command == "150") {                   // ‡∏ñ‡πâ‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡∏°‡∏≤‡πÄ‡∏õ‡πá‡∏ô "150"
      Serial.println("Servo Motor => 150");
      myservo.write(150);                          // ‡∏´‡∏°‡∏∏‡∏ô Servo ‡πÑ‡∏õ‡∏ó‡∏µ‡πà 150 ‡∏≠‡∏á‡∏®‡∏≤
      secLED();                                    // ‡∏Å‡∏£‡∏∞‡∏û‡∏£‡∏¥‡∏ö LED ‡∏ä‡πâ‡∏≤
    }
    else if (command == "OFF"){                    // ‡∏ñ‡πâ‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡∏°‡∏≤‡πÄ‡∏õ‡πá‡∏ô "OFF"
      Serial.println("Servo Motor => 0");
      myservo.write(0);                            // ‡∏´‡∏°‡∏∏‡∏ô Servo ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏ó‡∏µ‡πà 0 ‡∏≠‡∏á‡∏®‡∏≤
      digitalWrite(2, LOW);                        // ‡∏õ‡∏¥‡∏î LED
    }
    delay(1000);                                   // ‡∏´‡∏ô‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤ 1 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ loop ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏£‡πá‡∏ß‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ
  }
}


void blinkLED(){                                   // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏≥‡πÉ‡∏´‡πâ LED ‡∏Å‡∏£‡∏∞‡∏û‡∏£‡∏¥‡∏ö‡πÄ‡∏£‡πá‡∏ß
  for(int i = 0; i<5; i++){                        // ‡∏ó‡∏≥‡∏ã‡πâ‡∏≥ 5 ‡∏£‡∏≠‡∏ö
    digitalWrite(2, HIGH);                         // ‡πÄ‡∏õ‡∏¥‡∏î LED
    delay(400);                                    // ‡∏´‡∏ô‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤ 0.4 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
    digitalWrite(2, LOW);                          // ‡∏õ‡∏¥‡∏î LED
    delay(400);                                    // ‡∏´‡∏ô‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤ 0.4 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
  }
}

void secLED(){                                     // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏≥‡πÉ‡∏´‡πâ LED ‡∏Å‡∏£‡∏∞‡∏û‡∏£‡∏¥‡∏ö‡∏ä‡πâ‡∏≤
  for(int i = 0; i<5; i++){                        // ‡∏ó‡∏≥‡∏ã‡πâ‡∏≥ 5 ‡∏£‡∏≠‡∏ö
    digitalWrite(2, HIGH);                         // ‡πÄ‡∏õ‡∏¥‡∏î LED
    delay(2000);                                   // ‡∏´‡∏ô‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤ 2 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
    digitalWrite(2, LOW);                          // ‡∏õ‡∏¥‡∏î LED
    delay(2000);                                   // ‡∏´‡∏ô‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤ 2 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
  }
}




#include <ESP32Servo.h>
Servo myservo;
String command;          // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
unsigned long previousMillis = 0; //‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏û‡∏∂‡πà‡∏á‡∏Å‡∏£‡∏∞‡∏û‡∏¥‡∏ö‡πÑ‡∏ü 
const long interval = 400; // 0.4 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ ‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏≠‡∏≤‡πÑ‡∏ß‡πâ‡∏Å‡∏£‡∏∞‡∏û‡∏¥‡∏ö
bool ledState = LOW;       // ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÑ‡∏ü

void setup() {
  Serial.begin(9600);
  myservo.attach(32);
  pinMode(2, OUTPUT);
}

void loop() {
  // ‡∏≠‡πà‡∏≤‡∏ô Serial
  if (Serial.available()) {
    command = Serial.readStringUntil('\n');
    command.trim();

    // ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏õ‡∏£‡∏±‡∏ö‡∏°‡∏∏‡∏°
    if (command == "15" || command == "30" || command == "45" || 
        command == "60" || command == "90") {
      myservo.write(command.toInt());

    } else if (command == "115" || command == "135") {
      myservo.write(command.toInt());
      digitalWrite(2, HIGH);   // ‡πÑ‡∏ü‡∏ï‡∏¥‡∏î‡∏Ñ‡πâ‡∏≤‡∏á

    } else if (command == "160") {
      myservo.write(command.toInt());
      digitalWrite(2, HIGH);   // ‡πÑ‡∏ü‡∏ï‡∏¥‡∏î‡∏Ñ‡πâ‡∏≤‡∏á
      delay(3000);
      digitalWrite(2, LOW);   // ‡πÑ‡∏ü‡∏ï‡∏¥‡∏î‡∏Ñ‡πâ‡∏≤‡∏á

      digitalWrite(2, HIGH);   // ‡πÑ‡∏ü‡∏ï‡∏¥‡∏î‡∏Ñ‡πâ‡∏≤‡∏á
      delay(3000);
      digitalWrite(2, LOW);   // ‡πÑ‡∏ü‡∏ï‡∏¥‡∏î‡∏Ñ‡πâ‡∏≤‡∏á

    } else if (command == "Stop") {
      myservo.write(0);
      digitalWrite(2, LOW);    // ‡πÑ‡∏ü‡∏î‡∏±‡∏ö
    }
  }

  // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÑ‡∏ü‡∏Å‡∏£‡∏∞‡∏û‡∏£‡∏¥‡∏ö (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á 15‚Äì90)
  if (command == "15" || command == "30" || command == "45" || 
      command == "60" || command == "90") {
    unsigned long currentMillis = millis();
    if (currentMillis - previousMillis >= interval) {
      previousMillis = currentMillis;
      ledState = !ledState;              // ‡∏™‡∏•‡∏±‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
      digitalWrite(2, ledState);
    }
  }
}